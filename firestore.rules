rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Règles pour les profils business
    match /businesses/{businessId} {
      allow read, write: if request.auth != null && request.auth.uid == businessId;
    }
    
    // Règles pour les produits - isolation par business_id
    match /products/{productId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.business_id;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.business_id;
    }
    
    // Règles pour les ventes - isolation par business_id
    match /sales/{saleId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.business_id;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.business_id;
    }
    
    // Règles pour les sessions de vente
    match /sales_sessions/{sessionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.business_id;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.business_id;
    }
    
    // Règles pour les employés
    match /employees/{employeeId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.business_id;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.business_id;
    }
    
    // Règles pour les mouvements de stock
    match /stock_movements/{movementId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.business_id;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.business_id;
    }
    
    // Règles pour les plannings
    match /schedules/{scheduleId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.business_id;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.business_id;
    }
    
    // Règles pour les utilisateurs (admin seulement)
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || isAdmin(request.auth.uid));
    }
    
    // Fonction helper pour vérifier si l'utilisateur est admin
    function isAdmin(uid) {
      return exists(/databases/$(database)/documents/admins/$(uid));
    }
  }
}
